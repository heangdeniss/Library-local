<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contact Messages - Admin</title>
    <link rel="stylesheet" href="/styles/admin.css">
    <style>
        /* Additional styles for contact messages */
        .messages-container {
            max-width: 1200px;
            margin: 30px auto;
            padding: 20px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .stat-card h3 {
            font-size: 2rem;
            margin-bottom: 10px;
        }

        .stat-card p {
            font-size: 1rem;
            opacity: 0.9;
        }

        .messages-list {
            display: grid;
            gap: 20px;
        }

        .message-card {
            background: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            border-left: 4px solid #3498db;
        }

        .message-card.unread {
            border-left-color: #e74c3c;
            background-color: #fef9f9;
        }

        .message-card.replied {
            border-left-color: #27ae60;
        }

        .message-card.resolved {
            border-left-color: #95a5a6;
            opacity: 0.8;
        }        .message-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            gap: 20px;
        }

        .message-info {
            flex: 1;
        }

        .message-info h4 {
            color: #2c3e50;
            margin-bottom: 5px;
            font-size: 1.1rem;
        }

        .message-meta {
            color: #7f8c8d;
            font-size: 0.9rem;
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }

        .message-content {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            margin: 15px 0;
            line-height: 1.6;
        }

        .message-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
            flex-wrap: wrap;
        }

        .status-select {
            padding: 5px 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
        }

        .admin-notes {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin: 10px 0;
            resize: vertical;
            min-height: 60px;
        }

        .btn {
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }

        .btn-primary {
            background-color: #3498db;
            color: white;
        }

        .btn-primary:hover {
            background-color: #2980b9;
        }

        .btn-danger {
            background-color: #e74c3c;
            color: white;
        }        .btn-danger:hover {
            background-color: #c0392b;
        }

        .btn-sm {
            padding: 5px 10px;
            font-size: 0.8rem;
        }

        .btn-success {
            background-color: #27ae60;
            color: white;
        }

        .btn-success:hover {
            background-color: #219a52;
        }

        .btn-info {
            background-color: #3498db;
            color: white;
        }

        .btn-info:hover {
            background-color: #2980b9;
        }

        .btn-secondary {
            background-color: #95a5a6;
            color: white;
        }

        .btn-secondary:hover {
            background-color: #7f8c8d;
        }

        .quick-actions {
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #eee;
        }

        .status-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            font-weight: bold;
            text-transform: uppercase;
        }

        .status-badge.unread {
            background-color: #ffebee;
            color: #c62828;
        }

        .status-badge.read {
            background-color: #e3f2fd;
            color: #1565c0;
        }

        .status-badge.replied {
            background-color: #e8f5e8;
            color: #2e7d32;
        }

        .status-badge.resolved {
            background-color: #f3e5f5;
            color: #7b1fa2;
        }

        .back-link {
            display: inline-block;
            margin-bottom: 20px;
            padding: 10px 20px;
            background-color: #34495e;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        .back-link:hover {
            background-color: #2c3e50;
        }

        .no-messages {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
            font-size: 1.1rem;
        }

        .admin-notes-display {
            background-color: #fff;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 4px;
            margin-top: 10px;
            font-style: italic;
            color: #555;
        }

        @media (max-width: 768px) {
            .message-header {
                flex-direction: column;
                align-items: flex-start;
            }

            .message-actions {
                flex-direction: column;
            }

            .stats-grid {
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            }
        }
    </style>
</head>
<body>
    <div class="messages-container">
        <a href="/admin/dashboard" class="back-link">‚Üê Back to Dashboard</a>
        
        <h1>Contact Messages Management</h1>
        
        <!-- Statistics -->
        <% if (typeof stats !== 'undefined' && stats) { %>
        <div class="stats-grid">
            <div class="stat-card">
                <h3><%= stats.totalMessages || 0 %></h3>
                <p>Total Messages</p>
            </div>
            <div class="stat-card">
                <h3><%= stats.unreadMessages || 0 %></h3>
                <p>Unread Messages</p>
            </div>
            <div class="stat-card">
                <h3><%= stats.repliedMessages || 0 %></h3>
                <p>Replied Messages</p>
            </div>
            <div class="stat-card">
                <h3><%= stats.resolvedMessages || 0 %></h3>
                <p>Resolved Messages</p>
            </div>
        </div>
        <% } %>

        <!-- Messages List -->
        <div class="messages-list">
            <% if (typeof messages !== 'undefined' && messages && messages.length > 0) { %>
                <% messages.forEach(function(message) { %>
                <div class="message-card <%= message.status %>">
                    <div class="message-header">
                        <div class="message-info">
                            <h4><%= message.name %> <<%= message.email %>></h4>
                            <div class="message-meta">
                                <span>Date: <%= new Date(message.created_at).toLocaleDateString() %> <%= new Date(message.created_at).toLocaleTimeString() %></span>
                                <% if (message.user_name) { %>
                                <span>User: <%= message.user_name %></span>
                                <% } %>
                                <% if (message.ip_address) { %>
                                <span>IP: <%= message.ip_address %></span>
                                <% } %>
                            </div>
                        </div>
                        <span class="status-badge <%= message.status %>"><%= message.status %></span>
                    </div>

                    <% if (message.subject) { %>
                    <div style="margin-bottom: 10px;">
                        <strong>Subject:</strong> <%= message.subject %>
                    </div>
                    <% } %>

                    <div class="message-content">
                        <%= message.message %>
                    </div>

                    <% if (message.admin_notes) { %>
                    <div class="admin-notes-display">
                        <strong>Admin Notes:</strong> <%= message.admin_notes %>
                    </div>
                    <% } %>                    <form class="message-actions" onsubmit="updateMessageStatus(event, '<%= message.id %>')">
                        <select name="status" class="status-select" required>
                            <option value="unread" <%= message.status === 'unread' ? 'selected' : '' %>>Unread</option>
                            <option value="read" <%= message.status === 'read' ? 'selected' : '' %>>Read</option>
                            <option value="replied" <%= message.status === 'replied' ? 'selected' : '' %>>Replied</option>
                            <option value="resolved" <%= message.status === 'resolved' ? 'selected' : '' %>>Resolved</option>
                        </select>
                        
                        <textarea name="admin_notes" placeholder="Add admin notes..." class="admin-notes" onchange="handleNotesChange(this, '<%= message.id %>')"><%= message.admin_notes || '' %></textarea>
                        
                        <button type="submit" class="btn btn-primary">Update Status</button>
                        <button type="button" class="btn btn-danger" onclick="deleteMessage('<%= message.id %>')">Delete</button>
                        
                        <!-- Quick Action Buttons -->
                        <div class="quick-actions" style="display: flex; gap: 5px; margin-top: 10px;">
                            <button type="button" class="btn btn-sm btn-success" onclick="quickStatusUpdate('<%= message.id %>', 'read')" title="Mark as Read">
                                <i class="fas fa-eye"></i> Read
                            </button>
                            <button type="button" class="btn btn-sm btn-info" onclick="quickStatusUpdate('<%= message.id %>', 'replied')" title="Mark as Replied">
                                <i class="fas fa-reply"></i> Replied
                            </button>
                            <button type="button" class="btn btn-sm btn-secondary" onclick="quickStatusUpdate('<%= message.id %>', 'resolved')" title="Mark as Resolved">
                                <i class="fas fa-check"></i> Resolved
                            </button>
                        </div>
                    </form>
                </div>
                <% }); %>
            <% } else { %>
                <div class="no-messages">
                    <p>No contact messages found.</p>
                </div>
            <% } %>
        </div>
    </div>

    <script>        async function updateMessageStatus(event, messageId) {
            event.preventDefault();
            
            const form = event.target;
            const formData = new FormData(form);
            
            try {
                const response = await fetch(`/admin/contact-messages/${messageId}/status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        status: formData.get('status'),
                        admin_notes: formData.get('admin_notes')
                    })
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    if (result.newStatus && result.newStatus !== formData.get('status')) {
                        alert(`Message updated successfully!\nStatus automatically changed to: ${result.newStatus}`);
                    } else {
                        alert('Message status updated successfully!');
                    }
                    location.reload();
                } else {
                    alert(result.error || 'Error updating message status');
                }
            } catch (error) {
                console.error('Error updating message status:', error);
                alert('Error updating message status');
            }
        }

        async function quickStatusUpdate(messageId, newStatus) {
            try {
                const messageCard = document.querySelector(`form[onsubmit*="${messageId}"]`);
                const currentNotes = messageCard.querySelector('[name="admin_notes"]').value;
                
                const response = await fetch(`/admin/contact-messages/${messageId}/status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        status: newStatus,
                        admin_notes: currentNotes
                    })
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    alert(`Message marked as ${newStatus}!`);
                    location.reload();
                } else {
                    alert(result.error || 'Error updating message status');
                }
            } catch (error) {
                console.error('Error updating message status:', error);
                alert('Error updating message status');
            }
        }

        function handleNotesChange(textarea, messageId) {
            const noteValue = textarea.value.trim();
            const form = textarea.closest('form');
            const statusSelect = form.querySelector('[name="status"]');
            
            // Add visual indicator when notes are being added
            if (noteValue && statusSelect.value === 'unread') {
                textarea.style.borderColor = '#f39c12';
                textarea.title = 'Adding notes will automatically mark this message as "read"';
            } else if (noteValue && statusSelect.value === 'read') {
                textarea.style.borderColor = '#27ae60';
                textarea.title = 'Updating notes may change status to "replied"';
            } else {
                textarea.style.borderColor = '#ddd';
                textarea.title = '';
            }
        }

        async function deleteMessage(messageId) {
            if (!confirm('Are you sure you want to delete this message?')) {
                return;
            }
            
            try {
                const response = await fetch(`/admin/contact-messages/${messageId}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    alert('Message deleted successfully!');
                    location.reload();
                } else {
                    alert('Error deleting message');
                }
            } catch (error) {
                console.error('Error deleting message:', error);
                alert('Error deleting message');
            }
        }
    </script>
</body>
</html>
