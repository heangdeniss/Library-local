<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>My Borrowing Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles/borrowing.css"><style>        body {
            padding-top: 20px; /* Reduced padding since no fixed header */
        }
        
        .dashboard-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        .stat-card h3 {
            font-size: 2rem;
            margin-bottom: 5px;
        }
        
        .stat-card p {
            margin: 0;
            opacity: 0.9;
        }
        
        .section-card {
            background: white;
            border-radius: 10px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        .book-item {
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            background: #f8f9fa;
        }
        
        .book-item h5 {
            color: #2c3e50;
            margin-bottom: 10px;
        }
        
        .book-meta {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 10px;
            margin-bottom: 15px;
        }
        
        .book-meta span {
            font-size: 0.9rem;
            color: #6c757d;
        }
        
        .due-soon {
            border-left: 4px solid #f39c12;
            background: #fef9e7;
        }
        
        .overdue {
            border-left: 4px solid #e74c3c;
            background: #fdf2f2;
        }
        
        .btn-return {
            background: #27ae60;
            border: none;
            color: white;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .btn-return:hover {
            background: #219a52;
        }
        
        .btn-read {
            background: #3498db;
            border: none;
            color: white;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
            margin-right: 10px;
        }
        
        .btn-read:hover {
            background: #2980b9;
        }
        
        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: bold;
        }
        
        .status-borrowed {
            background: #d4edda;
            color: #155724;
        }
        
        .status-returned {
            background: #cce7ff;
            color: #004085;
        }
        
        .status-overdue {
            background: #f8d7da;
            color: #721c24;
        }
        
        .nav-tabs .nav-link.active {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }    </style>
</head>
<body class="bg-light">
      <div class="dashboard-container">
        <!-- Navigation -->
        <nav class="mb-4">
            <a href="/index1" class="btn btn-outline-secondary me-2">‚Üê Back to Library</a>
            <a href="/borrowing/books" class="btn btn-primary">Browse Books to Borrow</a>
        </nav>
        
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h2">My Borrowing Dashboard</h1>
        </div>
        
        <!-- Statistics Cards -->
        <div class="stats-cards">
            <div class="stat-card">
                <h3><%= currentBorrowedCount %></h3>
                <p>Currently Borrowed</p>
            </div>
            <div class="stat-card">
                <h3><%= settings.max_books_per_user - currentBorrowedCount %></h3>
                <p>Available to Borrow</p>
            </div>
            <div class="stat-card">
                <h3><%= settings.default_borrow_days %></h3>
                <p>Days Borrowing Period</p>
            </div>
            <div class="stat-card">
                <h3><%= borrowingHistory.filter(h => h.status === 'returned').length %></h3>
                <p>Books Returned</p>
            </div>
        </div>

        <!-- Tab Navigation -->
        <ul class="nav nav-tabs" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="current-tab" data-bs-toggle="tab" data-bs-target="#current" type="button" role="tab">
                    Currently Borrowed (<%= currentBorrowedCount %>)
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="history-tab" data-bs-toggle="tab" data-bs-target="#history" type="button" role="tab">
                    Borrowing History
                </button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="dashboardTabsContent">
            <!-- Currently Borrowed Books -->
            <div class="tab-pane fade show active" id="current" role="tabpanel">
                <div class="section-card">
                    <% if (borrowedBooks.length === 0) { %>
                        <div class="text-center py-5">
                            <h4 class="text-muted">No books currently borrowed</h4>
                            <p class="text-muted">Start exploring our library to borrow your first book!</p>
                            <a href="/borrowing/books" class="btn btn-primary">Browse Books</a>
                        </div>
                    <% } else { %>
                        <% borrowedBooks.forEach(book => { %>
                            <% 
                                const dueDate = new Date(book.due_date);
                                const today = new Date();
                                const daysUntilDue = Math.ceil((dueDate - today) / (1000 * 60 * 60 * 24));
                                let itemClass = 'book-item';
                                if (daysUntilDue < 0) {
                                    itemClass += ' overdue';
                                } else if (daysUntilDue <= 3) {
                                    itemClass += ' due-soon';
                                }
                            %>
                            <div class="<%= itemClass %>">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div class="flex-grow-1">
                                        <h5><%= book.title %></h5>
                                        <div class="book-meta">
                                            <span><strong>Author:</strong> <%= book.author %></span>
                                            <span><strong>Category:</strong> <%= book.category %></span>
                                            <span><strong>Borrowed:</strong> <%= new Date(book.borrow_date).toLocaleDateString() %></span>
                                            <span><strong>Due:</strong> <%= dueDate.toLocaleDateString() %></span>
                                            <% if (daysUntilDue < 0) { %>
                                                <span class="text-danger"><strong>Overdue by <%= Math.abs(daysUntilDue) %> days</strong></span>
                                            <% } else { %>
                                                <span class="text-info"><strong><%= daysUntilDue %> days remaining</strong></span>
                                            <% } %>
                                        </div>                                        <div class="mt-2">
                                            <a href="/view-pdf/<%= book.book_id %>" class="btn-read">Read Book</a>
                                            <button class="btn-return" data-record-id="<%= book.id %>" onclick="returnBook(this.dataset.recordId)">Return Book</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>

            <!-- Borrowing History -->
            <div class="tab-pane fade" id="history" role="tabpanel">
                <div class="section-card">
                    <% if (borrowingHistory.length === 0) { %>
                        <div class="text-center py-5">
                            <h4 class="text-muted">No borrowing history</h4>
                            <p class="text-muted">Your borrowing history will appear here.</p>
                        </div>
                    <% } else { %>
                        <% borrowingHistory.forEach(record => { %>
                            <div class="book-item">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div class="flex-grow-1">
                                        <h5><%= record.title %></h5>
                                        <div class="book-meta">
                                            <span><strong>Author:</strong> <%= record.author %></span>
                                            <span><strong>Category:</strong> <%= record.category %></span>
                                            <span><strong>Borrowed:</strong> <%= new Date(record.borrow_date).toLocaleDateString() %></span>
                                            <span><strong>Due:</strong> <%= new Date(record.due_date).toLocaleDateString() %></span>
                                            <% if (record.return_date) { %>
                                                <span><strong>Returned:</strong> <%= new Date(record.return_date).toLocaleDateString() %></span>
                                            <% } %>
                                            <% if (record.fine_amount > 0) { %>
                                                <span class="text-danger"><strong>Fine:</strong> $<%= record.fine_amount.toFixed(2) %></span>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div>
                                        <span class="status-badge status-<%= record.status %>">
                                            <%= record.status.charAt(0).toUpperCase() + record.status.slice(1) %>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        async function returnBook(recordId) {
            if (!confirm('Are you sure you want to return this book?')) {
                return;
            }

            try {
                const response = await fetch(`/borrowing/return/${recordId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();

                if (result.success) {
                    let message = result.message;
                    if (result.fineAmount > 0) {
                        message += `\nFine amount: $${result.fineAmount.toFixed(2)}`;
                    }
                    alert(message);
                    location.reload();
                } else {
                    alert(result.error || 'Error returning book');
                }
            } catch (error) {
                console.error('Error returning book:', error);
                alert('Error returning book');
            }
        }
    </script>
</body>
</html>
